//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30672275
// Cuda compilation tools, release 11.5, V11.5.119
// Based on NVVM 7.0.1
//

.version 7.5
.target sm_52
.address_size 64

	// .globl	mul
.const .align 4 .u32 MODULUS = 2147483647;

.visible .entry mul(
	.param .u64 mul_param_0,
	.param .u64 mul_param_1,
	.param .u64 mul_param_2,
	.param .u32 mul_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd1, [mul_param_0];
	ld.param.u64 	%rd2, [mul_param_1];
	ld.param.u64 	%rd3, [mul_param_2];
	ld.param.u32 	%r2, [mul_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.u32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.u32 	%r6, [%rd6];
	ld.global.u32 	%r7, [%rd8];
	mul.wide.u32 	%rd9, %r7, %r6;
	cvt.u32.u64 	%r8, %rd9;
	and.b32  	%r9, %r8, 2147483647;
	shr.u64 	%rd10, %rd9, 31;
	cvt.u32.u64 	%r10, %rd10;
	add.s32 	%r11, %r9, %r10;
	ld.const.u32 	%r12, [MODULUS];
	sub.s32 	%r13, %r11, %r12;
	min.u32 	%r14, %r11, %r13;
	cvta.to.global.u64 	%rd11, %rd3;
	add.s64 	%rd12, %rd11, %rd5;
	st.global.u32 	[%rd12], %r14;

$L__BB0_2:
	ret;

}
	// .globl	add
.visible .entry add(
	.param .u64 add_param_0,
	.param .u64 add_param_1,
	.param .u64 add_param_2,
	.param .u32 add_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [add_param_0];
	ld.param.u64 	%rd2, [add_param_1];
	ld.param.u64 	%rd3, [add_param_2];
	ld.param.u32 	%r2, [add_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB1_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.u32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.u32 	%r6, [%rd8];
	ld.global.u32 	%r7, [%rd6];
	add.s32 	%r8, %r6, %r7;
	ld.const.u32 	%r9, [MODULUS];
	sub.s32 	%r10, %r8, %r9;
	min.u32 	%r11, %r8, %r10;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.u32 	[%rd10], %r11;

$L__BB1_2:
	ret;

}
	// .globl	reduce
.visible .entry reduce(
	.param .u64 reduce_param_0,
	.param .u32 reduce_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [reduce_param_0];
	ld.param.u32 	%r2, [reduce_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB2_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.u32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.const.u32 	%r6, [MODULUS];
	ld.global.u32 	%r7, [%rd4];
	sub.s32 	%r8, %r7, %r6;
	min.u32 	%r9, %r7, %r8;
	st.global.u32 	[%rd4], %r9;

$L__BB2_2:
	ret;

}
	// .globl	sub
.visible .entry sub(
	.param .u64 sub_param_0,
	.param .u64 sub_param_1,
	.param .u64 sub_param_2,
	.param .u32 sub_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [sub_param_0];
	ld.param.u64 	%rd2, [sub_param_1];
	ld.param.u64 	%rd3, [sub_param_2];
	ld.param.u32 	%r2, [sub_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB3_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.u32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.u32 	%r6, [%rd8];
	ld.global.u32 	%r7, [%rd6];
	sub.s32 	%r8, %r7, %r6;
	ld.const.u32 	%r9, [MODULUS];
	add.s32 	%r10, %r9, %r8;
	setp.lt.u32 	%p2, %r10, %r9;
	selp.b32 	%r11, %r10, %r8, %p2;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.u32 	[%rd10], %r11;

$L__BB3_2:
	ret;

}
	// .globl	neg
.visible .entry neg(
	.param .u64 neg_param_0,
	.param .u32 neg_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [neg_param_0];
	ld.param.u32 	%r2, [neg_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB4_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.u32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.u32 	%r6, [%rd4];
	ld.const.u32 	%r7, [MODULUS];
	sub.s32 	%r8, %r7, %r6;
	st.global.u32 	[%rd4], %r8;

$L__BB4_2:
	ret;

}

